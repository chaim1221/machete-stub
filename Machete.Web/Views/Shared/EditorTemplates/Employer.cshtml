@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Localization
@model Machete.Web.ViewModel.Employer

@{
    var httpContext = ViewContext.HttpContext;
    var currentCulture = httpContext.Features.Get<IRequestCultureFeature>().RequestCulture.UICulture;
    var currentUrl = UriHelper.BuildRelative(httpContext.Request.PathBase, httpContext.Request.Path, httpContext.Request.QueryString);

    var recType = "employer";
    var idPrefix = recType + Model.ID + "-";
}
@Html.HiddenFor(model => model.ID, new { @class="hiddenRecID", id=idPrefix + "ID"})
<div class="tb-table" style="float: left; clear: left;">
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.name)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.name, new {tabindex = "1", id = idPrefix + "name"})
            @Html.ValidationMessageFor(model => model.name)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.business)
        </div>
        @* @Html.mUIDropDownYesNoFor(model => model.business, Model.def.yesnoSelectList(), new { tabindex = "2", id = idPrefix + "business" }) *@
    </div>
    <div class="tb-row" id="hidebusinessname">
        <div class="tb-label">
            @Html.LabelFor(model => model.businessname)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.businessname, new { tabindex = "3", id = idPrefix + "businessname" })
            @Html.ValidationMessageFor(model => model.businessname)
        </div>
    </div><!--why are these all mixed up? todo: fix groupings-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.phone)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.phone, new { tabindex = "4", id = idPrefix + "phone" })
            @Html.ValidationMessageFor(model => model.phone)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.address1)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.address1, new { tabindex = "5", id = idPrefix + "address1" })
            @Html.ValidationMessageFor(model => model.address1)
        </div>
    </div><!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.cellphone)
        </div>        <div class="tb-field">
            @Html.TextBoxFor(model => model.cellphone, new { tabindex = "6", id = idPrefix + "cellphone" })
            @Html.ValidationMessageFor(model => model.cellphone)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.address2)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.address2, new { tabindex = "7", id = idPrefix + "address2" })
            @Html.ValidationMessageFor(model => model.address2)
        </div>
    </div><!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.email)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.email, new { tabindex = "8", id = idPrefix + "email" })
            @Html.ValidationMessageFor(model => model.email)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.city)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.city, new { tabindex = "9", id = idPrefix + "city" })
            @Html.ValidationMessageFor(model => model.city)
        </div>
    </div>
    <!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.referredby)
        </div>
        @* @Html.mUIDropDownListFor(model => model.referredby, Model.def.getSelectList(LCategory.emplrreference), new { tabindex = "10", id = idPrefix + "referredby" }) *@
        <div class="tb-label">
            @Html.LabelFor(model => model.state)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.state, new { tabindex = "11", id = idPrefix + "state" })
            @Html.ValidationMessageFor(model => model.state)
        </div>
    </div>
    <!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.referredbyOther)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.referredbyOther, new { tabindex = "12", id = idPrefix + "referredbyOther" })
            @Html.ValidationMessageFor(model => model.referredbyOther)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.zipcode)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.zipcode, new { tabindex = "13", id = idPrefix + "zipcode" })
            @Html.ValidationMessageFor(model => model.zipcode)
        </div>
    </div>
    
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.licenseplate)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.licenseplate, new { tabindex = "14", id = idPrefix + "licenseplate" })
            @Html.ValidationMessageFor(model => model.licenseplate)
        </div>
        <div class="tb-label">
            @Html.LabelFor(model => model.driverslicense)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.driverslicense, new { tabindex = "15", id = idPrefix + "driverslicense" })
            @Html.ValidationMessageFor(model => model.driverslicense)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.active)
        </div>
        @* @Html.mUIDropDownYesNoFor(model => model.active, Model.def.yesnoSelectList(), new { tabindex = "16", id = idPrefix + "active" }) *@
        <div class="tb-label">
            @Html.LabelFor(model => model.blogparticipate)
        </div>
        @* @Html.mUIDropDownYesNoFor(model => model.blogparticipate, Model.def.yesnoSelectList(), new { tabindex = "17", id = idPrefix + "blogparticipate" }) *@
    </div>
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.returnCustomer)
        </div>
        @* @Html.mUIDropDownYesNoFor(model => model.returnCustomer, Model.def.yesnoSelectList(), new { tabindex = "18", id = idPrefix + "returnCustomer" }) *@
        <div class="tb-label">
            @Html.LabelFor(model => model.receiveUpdates)
        </div>
        @* @Html.mUIDropDownYesNoFor(model => model.receiveUpdates, Model.def.yesnoSelectList(), new { tabindex = "19", id = idPrefix + "blogparticipate" }) *@
    </div>
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.onlineSource)
        </div>
        @* @Html.mUIDropDownYesNoFor(model => model.onlineSource, Model.def.yesnoSelectList(), new { tabindex = "20", id = idPrefix + "onlineSource" }) *@
        <div class="tb-label">
            @Html.LabelFor(model => model.fax)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.fax, new { tabindex = "21", id = idPrefix + "fax" })
            @Html.ValidationMessageFor(model => model.fax)
        </div>
    </div>
</div>
<div class="tb-table" style="float: left;">
    <div class="tb-row">
        <div class="tb-label desc-label">
            @Html.LabelFor(model => model.notes)
        </div>
        <div class="tb-field desc-field">
            @Html.TextAreaFor(model => model.notes, new { tabindex = "21", @class="desc-field" , id = idPrefix + "notes"})
            @Html.ValidationMessageFor(model => model.notes)
        </div>
    </div>
</div>
<div style="clear: left;">
    
</div>

@await Html.PartialAsync("ManagerInfo", Model)

<script type="text/javascript">
    $(document).ready(function () {
        //$("#phone").mask("999-999-9999", { placeholder: "" });
        //$("#cellphone").mask("999-999-9999", { placeholder: "" });
        var bizname = $('#hidebusinessname');
        bizname.hide();
        $('#@(idPrefix)business').change(function () {
            if (!bizname.is(":visible"))
            {
                bizname.show();
            }
            else
            {
                bizname.hide();
            }
        });
    });
</script>
