@using Machete.Domain
@using Machete.Web.Helpers
@model Machete.Web.ViewModel.EmailView

@using Machete.Web.Resources;

@Html.HiddenFor(model => model.ID, new { @class = "hiddenRecID", id = Model.idPrefix + "EMAILID" })
@Html.HiddenFor(model => model.woid, new { @class = "hiddenRecID", id = Model.idPrefix + "WOID" })

<div >
    <input type="button" id="@(Model.idPrefix)attachWO" class="formButton" value="@Emails.attachWO" />
    <input type="button" id="@(Model.idPrefix)reattachWO" class="formButton" value="@Emails.reattachWO" />
    <input type="button" id="@(Model.idPrefix)clearWO" class="formButton" value="@Emails.clearWO" />
    <input type="button" id="@(Model.idPrefix)viewWO" class="formButton" value="@Emails.viewWO" />
</div>
<div class="tb-table" style="float: left; clear: left;">
    <div class="tb-row">
        <div class="tb-label">
            @Html.Label(Emails.emailStatus)
        </div>
        @if (Html.IsInRole("Administrator", "Manager") && Model.editable)
        {
            <div class="tb-field">
                @Html.DropDownListFor(model => model.statusID,
                    new SelectList(Model.def.getSelectList(LCategory.emailstatus), "Value", "Text", Model),
                    Shared.choose, new { id = Model.idPrefix + "status" })
                @Html.ValidationMessageFor(model => model.statusID);
            </div>
        }
        else
        { 
            <div class="tb-header">
                @Model.status
                @Html.HiddenFor(model => model.statusID, new { id = Model.idPrefix + "status" })
            </div>
        }
    </div>
    <div class="tb-row">
        <div class="tb-label">
            @Html.Label(Emails.templateChooser)
        </div>
        <div class="tb-field">
            <select name="templateChooser" id="@(Model.idPrefix + "templateChooser")"
                    tabindex="1"
                    class="">
                <option value="">@Shared.choose</option>
                @foreach (var item in Model.templates)
                {
                    <option value="@(item.Value)" template="@(item.template)">@item.Text</option>
                }
            </select>
        </div>
    </div>
    <div class="tb-row">
        @*@Html.mUITableLabelAndTextBoxFor(model => model.attachment, new { @id = Model.idPrefix + "attachment" })*@
        @Html.HiddenFor(m => m.attachment, new { id = Model.idPrefix + "attachment" })
    </div>
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(model => model.emailTo)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(model => model.emailTo,
                new { tabindex = "1", id = Model.idPrefix + "emailTo", @class = "emailField" })
            @Html.ValidationMessageFor(model => model.emailTo)
        </div>
    </div>
    <!--tb-row-->
    <div class="tb-row">
        <div class="tb-label">
            @Html.LabelFor(m => m.subject)
        </div>
        <div class="tb-field">
            @Html.TextBoxFor(m => m.subject,
                new { tabindex = "1", id = Model.idPrefix + "subject", @class = "emailField" })
            @Html.ValidationMessageFor(m => m.subject)
        </div>
    </div>
    <div class="tb-row">
        <div class="tb-label desc-label">
            @Html.LabelFor(model => model.body)
        </div>
        @Html.TextAreaFor(m => m.body, new { tabindex = "1", id = Model.idPrefix + "body", @class = "emailField" })
    </div>
</div>

<div style="clear: left;"></div>
@await Html.PartialAsync("ManagerInfo", Model)


<script type="text/javascript">
    $(document).ready(function () {
        var selectDropDown = $('#@(Model.idPrefix + "templateChooser")');
        var attachmentURL = '/WorkOrder/ViewForEmail/@(Model.woid)';
        console.log("attachmentURL: "+attachmentURL);
        selectDropDown.mUI('selectDDPopulatesField', {
            attrName: 'template',
            target: $('#@(Model.idPrefix + "body")')
        });
        $('#@(Model.idPrefix)attachWO').mUI('btnAttachWorkOrder', {
            url: attachmentURL,
            woid: @(Model.woid.GetValueOrDefault()),
            field: $('#@(Model.idPrefix)attachment'),
            reattach: $('#@(Model.idPrefix)reattachWO'),
            clear: $('#@(Model.idPrefix)clearWO'),
            view: $('#@(Model.idPrefix)viewWO')
        });
    });
</script>
